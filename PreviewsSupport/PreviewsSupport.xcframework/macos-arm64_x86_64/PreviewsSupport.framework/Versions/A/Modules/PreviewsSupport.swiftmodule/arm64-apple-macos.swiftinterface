// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-macos12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PreviewsSupport
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
@_exported import PreviewsSupport
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol MakeViewProvider {
  var makeView: @_Concurrency.MainActor () -> any SwiftUICore.View { get }
}
@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, *)
@_Concurrency.MainActor @preconcurrency public struct AnyViewModifier<M> : SwiftUICore.ViewModifier where M : SwiftUI.PreviewModifier, M.Context == () {
  @_Concurrency.MainActor @preconcurrency public init(_ modifier: M)
  @_Concurrency.MainActor @preconcurrency public func body(content: PreviewsSupport.AnyViewModifier<M>.Content) -> some SwiftUICore.View
  
  @available(iOS 18.0, tvOS 18.0, watchOS 11.0, macOS 15.0, *)
  public typealias Body = @_opaqueReturnTypeOf("$s15PreviewsSupport15AnyViewModifierV4body7contentQr7SwiftUI01_dE8_ContentVyACyxGG_tF", 0) __<M>
}
@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, *)
public enum PreviewModifierSupport {
  public static func toViewModifier<A>(modifier: A) -> PreviewsSupport.AnyViewModifier<A> where A : SwiftUI.PreviewModifier, A.Context == ()
}
@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, *)
extension PreviewsSupport.AnyViewModifier : Swift.Sendable {}
